[{"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\index.js":"1","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\App.js":"2","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\reportWebVitals.js":"3","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\Header.js":"4","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffects.js":"5","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffect.js":"6","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffect2.js":"7","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\FaceFilter.js":"8","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\StyleTransfer.js":"9","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\OldNew.js":"10","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\da_axios.js":"11","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\requests.js":"12","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\toon_axios.js":"13","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\dzook_axios.js":"14","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\key_config.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":837,"mtime":1609354638973,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":288,"mtime":1609263043063,"results":"20","hashOfConfig":"17"},{"size":1190,"mtime":1609321448529,"results":"21","hashOfConfig":"17"},{"size":937,"mtime":1609321895744,"results":"22","hashOfConfig":"17"},{"size":835,"mtime":1609321685596,"results":"23","hashOfConfig":"17"},{"size":9997,"mtime":1609522373706,"results":"24","hashOfConfig":"17"},{"size":6200,"mtime":1609496588460,"results":"25","hashOfConfig":"17"},{"size":4228,"mtime":1609535031914,"results":"26","hashOfConfig":"17"},{"size":181,"mtime":1609434781328,"results":"27","hashOfConfig":"17"},{"size":733,"mtime":1609602931697,"results":"28","hashOfConfig":"17"},{"size":188,"mtime":1609435403379,"results":"29","hashOfConfig":"17"},{"size":335,"mtime":1609441330318,"results":"30","hashOfConfig":"17"},{"size":351,"mtime":1609598985250,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"15g5efd",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\index.js",[],["66","67"],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\App.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\reportWebVitals.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\Header.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffects.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffect.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\PhotoEffect2.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\FaceFilter.js",["68","69","70","71","72","73","74","75"],"import React, { useEffect, useState } from 'react';\r\nimport './FaceFilter.css';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { Link } from 'react-router-dom';\r\nimport {requests, TOON_API_KEY, DZOOK_API_KEY} from '../requests';\r\nimport toon_axios from '../toon_axios';\r\nimport dzook_axios from '../dzook_axios'; \r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';      \r\n\r\nfunction FaceFilter() {\r\n\r\n    const[face, setFace] = useState(null);\r\n    // const[filter,  setFilter] = useState(requests.fetchZombify);\r\n    const[output, setOutput] = useState(null);\r\n    const[base64, setBase64] = useState(null);\r\n\r\n    const filterOptions = [\r\n        {value: requests.fetchZombify, label: 'Zombify'},\r\n        {value: requests.fetchToonify, label: 'Toonify'},\r\n        {value: requests.fetchToonifyPlus, label: 'Toonify_v2'},\r\n        {value: requests.fetchDzook, label: 'Illustration'},\r\n    ];\r\n\r\n\r\n    const toonData = new FormData();\r\n    var  dzookData = null;\r\n\r\n    async function fetchZombieData(){\r\n        setOutput(null);\r\n        const response = await toon_axios.post(requests.fetchZombify,\r\n            toonData,\r\n            { headers: \r\n                TOON_API_KEY,\r\n                'Content-type': 'multipart/form-data',\r\n                'X-RapidAPI-Host': 'toonify.p.rapidapi.com',\r\n                'accept': 'image/jpeg'\r\n            },\r\n            {timeout: 0},\r\n            {processData: false},\r\n            {mimeType: \"multipart/form-data\"},\r\n            {contentType: false}\r\n        );\r\n        console.log(response);\r\n        // console.log(filter);\r\n\r\n        setOutput(response.data.b64_encoded_output)\r\n        // console.log(photo);\r\n        return response;\r\n    }\r\n\r\n    async function fetchToonData(){\r\n        setOutput(null);\r\n        const response = await toon_axios.post(requests.fetchToonify,\r\n            toonData,\r\n            { headers: \r\n                TOON_API_KEY,\r\n                'Content-type': 'multipart/form-data',\r\n                'X-RapidAPI-Host': 'toonify.p.rapidapi.com',\r\n                'accept': 'image/jpeg'\r\n            },\r\n            {timeout: 0},\r\n            {processData: false},\r\n            {mimeType: \"multipart/form-data\"},\r\n            {contentType: false}\r\n        );\r\n        console.log(response);\r\n        // console.log(filter);\r\n\r\n        setOutput(response.data.b64_encoded_output)\r\n        // console.log(photo);\r\n        return response;\r\n    }\r\n\r\n    async function fetchToonPlusData(){\r\n        setOutput(null);\r\n        const response = await toon_axios.post(requests.fetchToonifyPlus,\r\n            toonData,\r\n            { headers: \r\n                TOON_API_KEY,\r\n                'Content-type': 'multipart/form-data',\r\n                'X-RapidAPI-Host': 'toonify.p.rapidapi.com',\r\n                'accept': 'image/jpeg'\r\n            },\r\n            {timeout: 0},\r\n            {processData: false},\r\n            {mimeType: \"multipart/form-data\"},\r\n            {contentType: false}\r\n        );\r\n        console.log(response);\r\n        // console.log(filter);\r\n\r\n        setOutput(response.data.b64_encoded_output)\r\n        // console.log(photo);\r\n        return response;\r\n    }\r\n\r\n    async function fetchDzookData(){\r\n        const response = await dzook_axios.post(requests.fetchDzook,\r\n            dzookData,\r\n            { headers: \r\n                DZOOK_API_KEY,\r\n                \"content-type\": \"application/json\",\r\n                \"x-rapidapi-host\": \"dzook4.p.rapidapi.com\",\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET, PUT, POST,DELETE, PATCH,OPTIONS',\r\n            },\r\n            {timeout: 0},\r\n        );\r\n        console.log(response);\r\n\r\n        // console.log(base64);\r\n        console.log(dzookData);\r\n        return response;\r\n    }\r\n\r\n    function encodeImageFileAsURL(element) {\r\n        var file = element;\r\n        var reader = new FileReader();\r\n        reader.onloadend = function() {\r\n        //   console.log(reader.result)\r\n            setBase64(reader.result)\r\n        }\r\n        reader.readAsDataURL(file);\r\n        // return reader.readAsDataURL(file);\r\n      }\r\n\r\n    useEffect(()=>{\r\n        toonData.append('image', face);\r\n        \r\n        // if(face){\r\n        //     encodeImageFileAsURL(face);\r\n        //     dzookData =  JSON.stringify({\r\n        //         'image': base64,\r\n        //         \"return_aligned\":false\r\n        //     });\r\n\r\n\r\n        //     console.log(dzookData);\r\n\r\n\r\n        //     }\r\n\r\n        // add , dzookData,base64 as dependents \r\n        },[face])\r\n\r\n    return (\r\n        <div className = 'faceFilter'>\r\n\r\n            <div className = 'faceFilter__content'>\r\n\r\n                <div className = 'faceFilter__contentLeft'>\r\n\r\n                    <div className = 'faceFilter__logo'>\r\n                        <Link to = '/'>\r\n                            <h2>PixAI</h2>\r\n                        </Link>\r\n                        <h3>Face Filters</h3>\r\n                    </div>\r\n\r\n                    <div className = 'faceFilter__contentInput'>\r\n\r\n                        <div className = 'faceFilter__contentInputUpload' >\r\n                            <div className = 'faceFilter__contentInputUploadButton'>\r\n\r\n                                <input \r\n                                    accept=\"image/*\"\r\n                                    className='faceFilter__contentInputUploadButtonInput'\r\n                                    id=\"icon-button-file\"\r\n                                    type=\"file\"\r\n                                    onChange = {(e) =>\r\n                                        setFace(e.target.files[0])\r\n                                    }\r\n                                />\r\n\r\n                                {face && <img src = {face && URL.createObjectURL(face)} />}\r\n\r\n                                {!face &&\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <IconButton\r\n                                            color=\"primary\"\r\n                                            aria-label=\"upload picture\"\r\n                                            component=\"span\">\r\n                                        <PhotoCamera \r\n                                        />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                }\r\n\r\n    \r\n\r\n                            </div>   \r\n                            \r\n                            {!face &&\r\n                                <p>\r\n                                    Add a photo\r\n                                </p>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {!face &&\r\n                            <div className = 'faceFilter__contentInputInfo'>       \r\n                                <p>\r\n                                    <FavoriteIcon/>\r\n                                    Toonify\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <FavoriteIcon/>  \r\n                                    Zombify\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <FavoriteIcon/>\r\n                                    Illustration\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <FavoriteIcon/>\r\n                                    Share\r\n                                </p> \r\n                            </div>\r\n                        }\r\n                        \r\n                        <div className='faceFilter__contentInputRun'>\r\n\r\n                            <input \r\n                                accept=\"image/*\"\r\n                                className='faceFilter__contentInputUploadButtonInput'\r\n                                id=\"icon-button-file\"\r\n                                type=\"file\"\r\n                                onChange = {(e) =>\r\n                                    setFace(e.target.files[0])\r\n                                }\r\n                            />\r\n\r\n                            {face &&\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                    <IconButton\r\n                                        color=\"primary\"\r\n                                        aria-label=\"upload picture\"\r\n                                        component=\"span\">\r\n                                    <PhotoCamera \r\n                                    />\r\n                                    </IconButton>\r\n                                </label>\r\n                            }\r\n\r\n                            <Button\r\n                                onClick = {fetchZombieData}\r\n                                variant = 'outlined'>\r\n                                Zombify\r\n                            </Button>\r\n\r\n                            <Button\r\n                                onClick = {fetchToonData}\r\n                                variant = 'outlined'>\r\n                                Toonify\r\n                            </Button>\r\n\r\n                            <Button\r\n                                onClick = {fetchToonPlusData}\r\n                                variant = 'outlined'>\r\n                                Toonify2\r\n                            </Button>\r\n                            \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className = 'faceFilter__contentOutput'>\r\n                    { output && <img src = {`data:image/jpeg;base64,${output}`}/>\r\n                }   \r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceFilter\r\n","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\StyleTransfer.js",["76","77","78","79"],"import { Button, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './StyleTransfer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../da_axios';\r\nimport {requests,  DA_API_KEY} from '../requests';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';   \r\n\r\n\r\n\r\nfunction StyleTransfer() {\r\n\r\n    const[content, setContent] = useState(null);\r\n    const[style, setStyle] = useState(null);\r\n    const[output, setOutput] = useState(null);\r\n\r\n    const data = new FormData();\r\n\r\n    async function fetchData(){\r\n        const response = await axios.post(requests.fetchStyle,\r\n            data,\r\n            { headers: \r\n                DA_API_KEY,\r\n                'Content-type': 'multipart/form-data'}\r\n            );\r\n        console.log(response);\r\n        setOutput(response.data.output_url)\r\n        // console.log(photo);\r\n        return response;\r\n    }\r\n\r\n    useEffect(() => {\r\n        data.append('content', content)\r\n        data.append('style', style)\r\n    }, [content, style])\r\n\r\n    return (\r\n        <div className = 'styleTransfer'>\r\n\r\n            <div className = 'styleTransfer__content'>\r\n\r\n                <div className = 'styleTransfer__contentLeft'>\r\n                    <Link to = '/'>\r\n                        <h2>PixAI</h2>     \r\n                    </Link>\r\n\r\n                    <h3>Style Transfer</h3>\r\n\r\n                    <div className = 'styleTransfer__Input'>\r\n\r\n                        <div className = 'styleTransfer__InputContent'>\r\n\r\n                            {!content &&\r\n                                <h3>Content</h3>\r\n                            }\r\n                            \r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className='styleTransfer__InputContentInput'\r\n                                id=\"contained-button-file1\"\r\n                                multiple\r\n                                type=\"file\"\r\n                                onChange = {(e)  => setContent(e.target.files[0])}\r\n                            />\r\n\r\n                            {content && <img src = {content && URL.createObjectURL(content)}/>}       \r\n\r\n                            {!content &&\r\n                                <label htmlFor=\"contained-button-file1\">\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n                            }\r\n                            \r\n\r\n                        </div>\r\n\r\n                        <div className = 'styleTransfer__InputStyle'>\r\n                            \r\n                            {!style && \r\n                                 <h3>Style</h3>                           \r\n                            }\r\n\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className='styleTransfer__InputStyleInput'\r\n                                id=\"contained-button-file2\"\r\n                                multiple\r\n                                type=\"file\"\r\n                                onChange = {(e)  => setStyle(e.target.files[0])}\r\n                            />\r\n\r\n                            {style && <img src = {style && URL.createObjectURL(style)}/>} \r\n\r\n                            {!style &&\r\n                                <label htmlFor=\"contained-button-file2\">\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div className = 'styleTransfer__contentLeftRun'>\r\n                        <input \r\n                            accept=\"image/*\"\r\n                            className='oldNew__InputStyleInput'\r\n                            id=\"icon-button-file1\"\r\n                            type=\"file\" \r\n                            onChange = {(e) => setContent(e.target.files[0])}\r\n                        />\r\n\r\n                        \r\n                        {content &&\r\n                            <label htmlFor=\"icon-button-file1\">\r\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                     <PhotoCamera/>\r\n                                </IconButton>\r\n                            </label> \r\n                        }\r\n\r\n                        <Button\r\n                            onClick = {fetchData}\r\n                            variant = 'outlined'>\r\n                            Merge\r\n                        </Button> \r\n\r\n                        <input \r\n                            accept=\"image/*\"\r\n                            className='oldNew__InputStyleInput'\r\n                            id=\"icon-button-file2\"\r\n                            type=\"file\" \r\n                            onChange = {(e) => setStyle(e.target.files[0])}\r\n                        />\r\n                           \r\n                        {style &&\r\n                            <label htmlFor=\"icon-button-file2\">\r\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                    <PhotoCamera/>\r\n                                </IconButton>\r\n                            </label> \r\n                        }\r\n                    </div>\r\n\r\n                    {/* <Button\r\n                            onClick = {fetchData}\r\n                            variant = 'outlined'>\r\n                            Merge\r\n                    </Button>  */}\r\n                </div>\r\n\r\n\r\n                <div className = 'styleTransfer__Output'>\r\n                    {output && <img src = {output}/>}   \r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleTransfer\r\n","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\components\\OldNew.js",["80","81","82","83","84"],"import React, { useEffect, useState } from 'react';\r\nimport './OldNew.css';\r\nimport { Button, IconButton, useEventCallback} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';   \r\nimport axios from '../da_axios';\r\nimport {requests,  DA_API_KEY} from '../requests';\r\n// import DA_API_KEY from '../requests';\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nfunction OldNew() {\r\n\r\n    const[photo, setPhoto] = useState(null);\r\n    const[output, setOutput] = useState(null);\r\n\r\n    const data =new FormData();\r\n    \r\n\r\n    async function fetchData(){\r\n        const response = await axios.post(requests.fetchColor,\r\n            data,\r\n            { headers: \r\n                DA_API_KEY,\r\n                'Content-type': 'multipart/form-data'}\r\n            );\r\n        console.log(response);\r\n        setOutput(response.data.output_url)\r\n        console.log(photo);\r\n        return response;\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        data.append('image', photo)\r\n    },[photo])\r\n\r\n\r\n    return (\r\n        <div className = 'oldNew'>\r\n            <div className = 'oldNew__content'>\r\n\r\n                <div className = 'oldNew__contentLeft'>\r\n                    <Link to = '/'>\r\n                        <h2>PixAI</h2>     \r\n                    </Link>\r\n\r\n                    <h3>Old to New</h3>\r\n\r\n                    <div className = 'oldNew__Input'>\r\n\r\n                        <div className = 'oldNew__InputStyle'>\r\n\r\n                            {!photo &&\r\n                                <h3>Old Photo</h3>\r\n                            } \r\n    \r\n                            \r\n                            <input \r\n                                accept=\"image/*\"\r\n                                className='oldNew__InputStyleInput'\r\n                                id=\"icon-button-file\"\r\n                                type=\"file\" \r\n                                onChange = {(e) => setPhoto(e.target.files[0])}\r\n                                />\r\n\r\n                                {photo && <img src = {photo && URL.createObjectURL(photo)}/>}\r\n\r\n\r\n                            {!photo &&\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <PhotoCamera/>\r\n                                    </IconButton>\r\n                                </label> \r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className = 'oldNew__run'>\r\n                        <input \r\n                            accept=\"image/*\"\r\n                            className='oldNew__InputStyleInput'\r\n                            id=\"icon-button-file\"\r\n                            type=\"file\" \r\n                            onChange = {(e) => setPhoto(e.target.files[0])}\r\n                        />\r\n                           \r\n                        {photo &&\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                    <PhotoCamera/>\r\n                                </IconButton>\r\n                            </label> \r\n                        }\r\n\r\n                        <Button\r\n                            onClick = {\r\n                                fetchData\r\n                            }\r\n                            variant = 'outlined'>\r\n                            Revitalise\r\n                        </Button> \r\n                    </div>\r\n                    \r\n                    {/* <Button\r\n                            onClick = {\r\n                                fetchData\r\n                            }\r\n                            variant = 'outlined'>\r\n                            Revitalise\r\n                    </Button>  */}\r\n                </div>\r\n\r\n                <div className = 'oldNew__Output'>\r\n                    {output && <img src = {output}/>}\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OldNew\r\n","C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\da_axios.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\requests.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\toon_axios.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\dzook_axios.js",[],"C:\\Users\\Al-Amin\\Documents\\reactPrjs\\photo_digital_ocean\\src\\key_config.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":18,"column":11,"nodeType":"91","messageId":"92","endLine":18,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":20,"column":11,"nodeType":"91","messageId":"92","endLine":20,"endColumn":24},{"ruleId":"89","severity":1,"message":"95","line":100,"column":20,"nodeType":"91","messageId":"92","endLine":100,"endColumn":34},{"ruleId":"89","severity":1,"message":"96","line":119,"column":14,"nodeType":"91","messageId":"92","endLine":119,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":147,"column":11,"nodeType":"99","endLine":147,"endColumn":17,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":178,"column":42,"nodeType":"103","endLine":178,"endColumn":91},{"ruleId":"101","severity":1,"message":"102","line":278,"column":33,"nodeType":"103","endLine":278,"endColumn":82},{"ruleId":"97","severity":1,"message":"104","line":35,"column":8,"nodeType":"99","endLine":35,"endColumn":24,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":66,"column":41,"nodeType":"103","endLine":66,"endColumn":95},{"ruleId":"101","severity":1,"message":"102","line":94,"column":39,"nodeType":"103","endLine":94,"endColumn":89},{"ruleId":"101","severity":1,"message":"102","line":159,"column":32,"nodeType":"103","endLine":159,"endColumn":53},{"ruleId":"89","severity":1,"message":"106","line":3,"column":30,"nodeType":"91","messageId":"92","endLine":3,"endColumn":46},{"ruleId":"89","severity":1,"message":"107","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":22},{"ruleId":"97","severity":1,"message":"104","line":35,"column":7,"nodeType":"99","endLine":35,"endColumn":14,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"102","line":66,"column":43,"nodeType":"103","endLine":66,"endColumn":93},{"ruleId":"101","severity":1,"message":"102","line":118,"column":32,"nodeType":"103","endLine":118,"endColumn":53},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'base64' is assigned a value but never used.","'filterOptions' is assigned a value but never used.","'fetchDzookData' is defined but never used.","'encodeImageFileAsURL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toonData'. Either include it or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["112"],"'useEventCallback' is defined but never used.","'LoadingOverlay' is defined but never used.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [face, toonData]",{"range":"120","text":"121"},"Update the dependencies array to be: [content, data, style]",{"range":"122","text":"123"},"Update the dependencies array to be: [data, photo]",{"range":"124","text":"125"},[4714,4720],"[face, toonData]",[1043,1059],"[content, data, style]",[1047,1054],"[data, photo]"]